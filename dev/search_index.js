var documenterSearchIndex = {"docs":
[{"location":"#NBT","page":"Home","title":"NBT","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for NBT.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#NBT.TagList","page":"Home","title":"NBT.TagList","text":"struct TagList{T}\n\nRepresents an NBT list tag, containing an array of T. See minecraft wiki.\n\nProperties\n\ndata::Vector{T}: The data in the tag.\n\n\n\n\n\n","category":"type"},{"location":"#NBT.begin_compound-Tuple{IO, String}","page":"Home","title":"NBT.begin_compound","text":"begin_compound(io, name)\n\nBegin an NBT Compound tag and return the number of bytes written. Use only for the root tag (with an empty name) or between begin_compound and end_compound.\n\n\n\n\n\n","category":"method"},{"location":"#NBT.begin_compound-Tuple{IO}","page":"Home","title":"NBT.begin_compound","text":"begin_compound(io)\n\nBegin an NBT Compound tag and return the number of bytes written. Use only after begin_list.\n\nNote: This method just returns 0, but is included for completeness and to allow for more readable code.\n\n\n\n\n\n","category":"method"},{"location":"#NBT.begin_list-Union{Tuple{T}, Tuple{IO, Integer, Type{T}}} where T","page":"Home","title":"NBT.begin_list","text":"begin_list(io, length, type)\n\nBegin an NBT List tag with the specified length and element type and return the number of bytes written. Use only after begin_list.\n\n\n\n\n\n","category":"method"},{"location":"#NBT.begin_list-Union{Tuple{T}, Tuple{IO, String, Integer, Type{T}}} where T","page":"Home","title":"NBT.begin_list","text":"begin_list(io, name, length, type)\n\nBegin an NBT List tag with the specified length and element type and return the number of bytes written. Use only between begin_compound and end_compound.\n\n\n\n\n\n","category":"method"},{"location":"#NBT.begin_nbt_file-Tuple{IO}","page":"Home","title":"NBT.begin_nbt_file","text":"begin_nbt_file(io)\n\nBegin an NBT file and return a stream and the number of bytes written.\n\n\n\n\n\n","category":"method"},{"location":"#NBT.end_compound-Tuple{IO}","page":"Home","title":"NBT.end_compound","text":"end_compound(io)\n\nEnd the current NBT Compound tag and return the number of bytes written.\n\n\n\n\n\n","category":"method"},{"location":"#NBT.end_nbt_file-Tuple{IO}","page":"Home","title":"NBT.end_nbt_file","text":"end_nbt_file(io)\n\nEnd an NBT file and return the number of bytes written.\n\n\n\n\n\n","category":"method"},{"location":"#NBT.read-Tuple{IO}","page":"Home","title":"NBT.read","text":"read(io)\n\nRead NBT data from an IO and return the data as Julia objects.\n\n\n\n\n\n","category":"method"},{"location":"#NBT.read-Tuple{String}","page":"Home","title":"NBT.read","text":"read(filename)\n\nRead an NBT file and return the data as Julia objects.\n\n\n\n\n\n","category":"method"},{"location":"#NBT.read_uncompressed-Tuple{IO}","page":"Home","title":"NBT.read_uncompressed","text":"read_uncompressed(io, ::Type{Tag})\n\nReads an nbt tag from an uncompressed IO. Not exported.\n\n\n\n\n\n","category":"method"},{"location":"#NBT.write-Union{Tuple{B}, Tuple{A}, Tuple{T}, Tuple{IO, Pair{String, OrderedCollections.LittleDict{String, T, A, B}}}} where {T, A, B}","page":"Home","title":"NBT.write","text":"write(io)\n\nWrite NBT data to an IO and return the number of bytes written.\n\n\n\n\n\n","category":"method"},{"location":"#NBT.write-Union{Tuple{B}, Tuple{A}, Tuple{T}, Tuple{String, Pair{String, OrderedCollections.LittleDict{String, T, A, B}}}} where {T, A, B}","page":"Home","title":"NBT.write","text":"write(filename)\n\nWrite an NBT file and return the number of bytes written.\n\n\n\n\n\n","category":"method"},{"location":"#NBT.write_tag-Tuple{IO, UInt8}","page":"Home","title":"NBT.write_tag","text":"write_tag(io, data)\n\nWrite the data tag and return the number of bytes written. Use only after begin_list.\n\n\n\n\n\n","category":"method"},{"location":"#NBT.write_tag-Union{Tuple{T}, Tuple{IO, Pair{String, T}}} where T","page":"Home","title":"NBT.write_tag","text":"write_tag(io, name => data)\n\nWrite the name => data pair and return the number of bytes written. Use only between begin_compound and end_compound.\n\n\n\n\n\n","category":"method"},{"location":"#NBT.write_uncompressed-Union{Tuple{B}, Tuple{A}, Tuple{T}, Tuple{IO, OrderedCollections.LittleDict{String, T, A, B}}} where {T, A, B}","page":"Home","title":"NBT.write_uncompressed","text":"write_uncompressed(io, tag)\n\nWrites an nbt tag to an uncompressed IO. Not exported.\n\n\n\n\n\n","category":"method"}]
}
